define({ "api": [  {    "type": "get",    "url": "/deal/:dealId",    "title": "Get a deal by Id",    "name": "getDealById",    "group": "Deal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the picture</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the deal</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the deal</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Description of the deal</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "categories",            "description": "<p>Categories this deal belongs to</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "price",            "description": "<p>Price of the deal</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"id\": 2,\n  \"name\": \"Magical Boots\",\n  \"description\": \"Boots crafted with magic!\",\n  \"categories\": [\"men\", \"footwear\"],\n  \"price\": \"51.50\",\n  \"specs\": null,\n  \"pictures\": null,\n  \"condition\": \"new\",\n  \"createdAt\": \"2016-05-17T14:32:06.304Z\",\n  \"updatedAt\": \"2016-05-17T14:32:06.304Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/deals/routes/deals.routes.js",    "groupTitle": "Deal"  },  {    "type": "get",    "url": "/deals",    "title": "Get Deals",    "name": "getDeals",    "group": "Deal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Optional Query Parameters": [          {            "group": "Optional Query Parameters",            "type": "String",            "optional": false,            "field": "categories",            "description": "<p>Comma seperated and case sensitive. Ex: 'Men,Women'</p>"          },          {            "group": "Optional Query Parameters",            "type": "String",            "optional": false,            "field": "condition",            "description": "<p>Condition of deal Ex: 'new'</p>"          },          {            "group": "Optional Query Parameters",            "type": "String",            "optional": false,            "field": "keywords",            "description": "<p>Comma seperated. Not case sensitive. Ex: 'sword,wand,wood'</p>"          }        ]      }    },    "description": "<p>Returns a list of deals. Can pass in optional query parameters to filter for specific deals. Example: /api/v1/deals?categories=Men,Women&amp;condition=good&amp;keywords=sword,wand</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>Response after successful add</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.name",            "description": "<p>Name of the Deal</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.description",            "description": "<p>Details of the Deal</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "data.categories",            "description": "<p>Categories this item falls under (e.g., &quot;Men's clothes&quot;)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.condition",            "description": "<p>Condition of the item; one of [&quot;New&quot;, &quot;Good&quot;, &quot;Fair&quot;, &quot;Poor&quot;]</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.price",            "description": "<p>Price of the item</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "data.pictures",            "description": "<p>Array of urls of images of the store</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"deals\": [\n        {\n            \"name\": \"Levys Blue Jeans\",\n            \"description\": \"Good condition; seem hardly worn.\",\n            \"categories\": [\"Women's clothes\"],\n            \"condition\": \"New\",\n            \"price\": \"9.99\",\n            \"specs\": {\n              \"garmentSize\": {\n                \"size\": \"M\",\n                \"neck\": \"\",\n                \"sleeve\": \"\"\n              }\n            },\n            \"pictures\": [\"1\", \"2\"]\n        },\n        {\n            \"name\": \"Old Navy Polo\",\n            \"description\": \"Blue and white striped polo.\",\n            \"categories\": [\"Men's clothes\"],\n            \"condition\": \"Good\",\n            \"price\": \"5.99\",\n            \"specs\": {\n              \"garmentSize\": {\n                \"size\": \"\",\n                \"neck\": \"16.5\",\n                \"sleeve\": \"36\"\n              }\n            },\n            \"pictures\": [\"3\", \"4\"]\n        }\n    ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/deals/routes/deals.routes.js",    "groupTitle": "Deal"  },  {    "type": "get",    "url": "/store/:storeId/deals",    "title": "Get deals belonging to a store",    "name": "getStoreDeal",    "group": "Deal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the Deal</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Details of the Deal</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "categories",            "description": "<p>Categories this item fall under (e.g., &quot;men's clothes&quot;)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "condition",            "description": "<p>Condition of the item; one of [&quot;New&quot;, &quot;Good&quot;, &quot;Fair&quot;, &quot;Poor&quot;]</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "price",            "description": "<p>Price of the item</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "specs",            "description": "<p>Garment size information</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "pictures",            "description": "<p>Array of urls of images of the store</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n              {\n                \"name\": \"Levys Blue Jeans\",\n                \"description\": \"Good condition; seem hardly worn.\",\n                \"categories\": [\"Women's clothes\"],\n                \"price\": \"9.99\",\n                \"condition\": \"New\",\n                \"specs\": {\n                  \"garmentSize\": {\n                    \"size\": \"M\",\n                    \"neck\": \"\",\n                    \"sleeve\": \"\"\n                  }\n                },\n                \"pictures\": [\"1\", \"2\"]\n              },\n              {\n                  \"name\": \"Old Navy Polo\",\n                  \"description\": \"Blue and white striped polo.\",\n                  \"categories\": [\"Men's clothes\"],\n                  \"condition\": \"Good\",\n                  \"price\": \"5.99\",\n                  \"specs\": {\n                    \"garmentSize\": {\n                      \"size\": \"\",\n                      \"neck\": \"16.5\",\n                      \"sleeve\": \"36\"\n                    }\n                  },\n                  \"pictures\": [\"3\", \"4\"]\n              }\n    ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/deals/routes/deals.routes.js",    "groupTitle": "Deal"  },  {    "type": "post",    "url": "/store/:storeId/deals",    "title": "Add deal to a store",    "name": "postStoreDeal",    "group": "Deal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the Deal</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Details of the Deal</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "categories",            "description": "<p>Categories this item falls under (e.g., &quot;Men's clothes&quot;)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "condition",            "description": "<p>Condition of the item; one of [&quot;New&quot;, &quot;Good&quot;, &quot;Fair&quot;, &quot;Poor&quot;]</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "price",            "description": "<p>Price of the item</p>"          },          {            "group": "Parameter",            "type": "JSON",            "optional": false,            "field": "specs",            "description": "<p>Garment size information</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "pictures",            "description": "<p>Array of urls of images of the store</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n    \"name\": \"Levys Blue Jeans\",\n    \"description\": \"Good condition; seem hardly worn.\",\n    \"categories\": [\"Women's clothes\"],\n    \"price\": \"9.99\",\n    \"condition\": \"New\",\n    \"specs\": {\n      \"garmentSize\": {\n        \"size\": \"M\",\n        \"neck\": \"\",\n        \"sleeve\": \"\"\n      }\n    \"pictures\": [\"1\", \"2\"]\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the Deal</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Details of the Deal</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "categories",            "description": "<p>Categories this item fall under (e.g., &quot;men's clothes&quot;)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "condition",            "description": "<p>Condition of the item; one of [&quot;New&quot;, &quot;Good&quot;, &quot;Fair&quot;, &quot;Poor&quot;]</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "price",            "description": "<p>Price of the item</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "specs",            "description": "<p>Garment size information</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "pictures",            "description": "<p>Array of urls of images of the store</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"name\": \"Levys Blue Jeans\",\n  \"description\": \"Good condition; seem hardly worn.\",\n  \"categories\": [\"Women's clothes\"],\n  \"price\": \"9.99\",\n  \"condition\": \"New\",\n  \"specs\": {\n    \"garmentSize\": {\n      \"size\": \"M\",\n      \"neck\": \"\",\n      \"sleeve\": \"\"\n    }\n  },\n  \"pictures\": [\"1\", \"2\"]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/deals/routes/deals.routes.js",    "groupTitle": "Deal"  },  {    "type": "put",    "url": "/deal/:dealId",    "title": "Update a deal",    "name": "updateDealById",    "group": "Deal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the Deal</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n   \"name\": \"Wander Thrift\",\n   \"details\": \"Exchange old wands for new awesome ones\",\n   \"images\": [\"1\", \"2\"]\n }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the Deal</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "details",            "description": "<p>Details of the Deal</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "images",            "description": "<p>Array of urls of images of the store</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"name\": \"Wander Thrift\",\n   \"details\": \"Exchange old wands for new awesome ones\",\n   \"images\": [\"1\", \"2\"]\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response ",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/deals/routes/deals.routes.js",    "groupTitle": "Deal"  },  {    "type": "get",    "url": "/s3url/get/:imageId/:type",    "title": "get signed url for getting s3 object",    "name": "getGetSignedUrl",    "group": "Pictures",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "imageId",            "optional": false,            "field": "imageId",            "description": "<p>Id of image to get from s3.</p>"          },          {            "group": "Parameter",            "type": "type",            "optional": false,            "field": "type",            "description": "<p>Type of image to get from s3.['thumbnail', 'small', 'medium', 'large']</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>signedUrl for get</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n \"url\":\"https://xthrift-conv.s3-us-west-2.amazonaws.com/image?AWSAccessKeyId=AKIAJOTNTHRKCKZ3HZ7A&Expires=1456814260&Signature=mT9aKzEIEFFd0tCqLEKNJr6J8SM%3D\"\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/pictures/routes/signedUrl.routes.js",    "groupTitle": "Pictures"  },  {    "type": "get",    "url": "/picture/:picId",    "title": "Get a picture by Id",    "name": "getPictureById",    "group": "Pictures",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the picture</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the picture</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>Url of the Image</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>Type of the image(DEAL/STORE) Details of the Store</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"id\": \"1\",\n   \"url\": \"https://xthrift-conv.s3-us-west-2.amazonaws.com/image\",\n   \"type\":\"DEAL\", \n   \"createdAt\":\"2016-03-01T08:35:19.461Z\",\n   \"updatedAt\":\"2016-03-01T08:35:19.461Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/pictures/routes/pictures.routes.js",    "groupTitle": "Pictures"  },  {    "type": "get",    "url": "/s3url/post",    "title": "get signed url for posting s3 object",    "name": "getPostSignedUrl",    "group": "Pictures",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>signedUrl for post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "params",            "description": "<p>params for post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "params.Bucket",            "description": "<p>Bucket to put the object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "params.Key",            "description": "<p>Key of the object to put</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "params.Expires",            "description": "<p>Expiration period of the url in seconds</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n \"url\":\"https://xthrift-conv.s3-us-west-2.amazonaws.com/image?AWSAccessKeyId=AKIAJOTNTHRKCKZ3HZ7A&Expires=1456814260&Signature=mT9aKzEIEFFd0tCqLEKNJr6J8SM%3D\",\n \"params\": {\n     \"Bucket\": \"my-bucket\",\n     \"Key\": \"110ec58a-a0f2-4ac4-8393-c866d813b8d1\",\n     \"Expires\": \"3600\"\n     }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/pictures/routes/signedUrl.routes.js",    "groupTitle": "Pictures"  },  {    "type": "get",    "url": "/s3url/:imageId",    "title": "get signed url for getting s3 object (toDo)",    "name": "getSignedUrl",    "group": "Pictures",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "getType",            "optional": false,            "field": "type",            "description": "<p>Type of image to get from s3.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>signedUrl for get</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n \"thumbnail\":\"https://xthrift-conv.s3-us-west-2.amazonaws.com/image?AWSAccessKeyId=AKIAJOTNTHRKCKZ3HZ7A&Expires=1456814260&Signature=mT9aKzEIEFFd0tCqLEKNJr6J8SM%3D\",\n \"small\":\"https://xthrift-conv.s3-us-west-2.amazonaws.com/image?AWSAccessKeyId=AKIAJOTNTHRKCKZ3HZ7A&Expires=1456814260&Signature=mT9aKzEIEFFd0tCqLEKNJr6J8SM%3D\",\n \"medium\":\"https://xthrift-conv.s3-us-west-2.amazonaws.com/image?AWSAccessKeyId=AKIAJOTNTHRKCKZ3HZ7A&Expires=1456814260&Signature=mT9aKzEIEFFd0tCqLEKNJr6J8SM%3D\",\n \"large\":\"https://xthrift-conv.s3-us-west-2.amazonaws.com/image?AWSAccessKeyId=AKIAJOTNTHRKCKZ3HZ7A&Expires=1456814260&Signature=mT9aKzEIEFFd0tCqLEKNJr6J8SM%3D\"\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/pictures/routes/signedUrl.routes.js",    "groupTitle": "Pictures"  },  {    "type": "post",    "url": "/pictures",    "title": "Post or get Pictures",    "name": "postPicture",    "group": "Pictures",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "params",            "description": "<p>params for post</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "params.Bucket",            "description": "<p>Bucket to put the object</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "params.Key",            "description": "<p>Key of the object to put</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "params.Expires",            "description": "<p>Expiration period of the url in seconds</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>The picture type that it belongs to.('DEAL', 'AVATAR', 'STORE')</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n \"params\": {\n     \"Bucket\": \"my-bucket\",\n     \"Key\": \"110ec58a-a0f2-4ac4-8393-c866d813b8d1\",\n     \"Expires\": \"3600\"\n     },\n   \"type\":\"DEAL\" \n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "data",            "description": "<p>data returned from the api</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>unique id of picture</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "data.ImageKeys",            "description": "<p>Image Keys of different type of images</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ImageKeys.thumbnail",            "description": "<p>Image Keys of type thumbnail</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ImageKeys.small",            "description": "<p>Image Keys of type small</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ImageKeys.medium",            "description": "<p>Image Keys of type medium</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ImageKeys.large",            "description": "<p>Image Keys of type large</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\":\n     {\n        \"id\": 12,\n        \"imageKeys\": {\n         \"thumbnail\": \"thumbnail-myKey\",\n         \"small\": \"small-myKey\",\n         \"medium\": \"medium-myKey\",\n         \"large\": \"large-myKey\",\n        }\n        \"type\":\"DEAL\",\n        \"updatedAt\":\"2016-03-01T08:43:06.766Z\",\n        \"createdAt\":\"2016-03-01T08:43:06.766Z\"\n     }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid JWT token</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized:",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/pictures/routes/pictures.routes.js",    "groupTitle": "Pictures"  },  {    "type": "get",    "url": "/store/:storeId",    "title": "Get a store by Id",    "name": "getStoreById",    "group": "Store",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the store</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Unique name of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "details",            "description": "<p>Details of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Phone no of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Valid email of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Address of the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>City where the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>Standard two letter code of the state where the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "zipCode",            "description": "<p>Zipcode of the location where the Store is located</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "businessHours",            "description": "<p>Business hours of the Store</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "businessHours.usual",            "description": "<p>The usual business hours</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "businessHours.usual.dayName",            "description": "<p>The array of days that has usual timing</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.usual.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.usual.close",            "description": "<p>Time when the business hour closes (for eg 7:00 pm is 1500)</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "businessHours.exceptions",            "description": "<p>Exceptions where the usual timing does not follow</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.dayName",            "description": "<p>The days that has timing other than regular timing</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.close",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "images",            "description": "<p>Array of urls of images of the store</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "deals",            "description": "<p>Array of ids of the deals</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"name\": \"Olivander Wands\",\n   \"details\": \"Best wand in entire muggle world\",\n   \"phone\": \"123456\",\n   \"email\": \"olivander@middleEarth.shire\",\n   \"address\": \"221B, Baker Street\",\n   \"city\" : \"New York\",\n   \"state\": \"NY\",\n   \"zipCode\": \"1234\",\n   \"businessHours\": {\n     \"usual\" : {\n       \"dayName\": [\"mon\", \"tue\", \"wed\"],\n       \"open\": 0900,\n       \"close\": 1700\n     },\n     \"exceptions\": [\n       {\n         \"dayName\": \"sat\",\n         \"open\": \"1200\",\n         \"close\": \"1500\"\n       }\n     ]\n   }\n }\n\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/stores/routes/stores.routes.js",    "groupTitle": "Store"  },  {    "type": "get",    "url": "/stores",    "title": "Get stores",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "name": "getStores",    "group": "Store",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "stores",            "description": "<p>List of Stores</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.name",            "description": "<p>Unique name of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "stores.details",            "description": "<p>Details of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.phone",            "description": "<p>Phone no of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "stores.email",            "description": "<p>Valid email of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.address",            "description": "<p>Address of the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.city",            "description": "<p>City where the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.state",            "description": "<p>Standard two letter code of the state where the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.zipCode",            "description": "<p>Zipcode of the location where the Store is located</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "stores.businessHours",            "description": "<p>Business hours of the Store</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "stores.businessHours.usual",            "description": "<p>The usual business hours</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "stores.businessHours.usual.dayName",            "description": "<p>The array of days that has usual timing</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.businessHours.usual.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.businessHours.usual.close",            "description": "<p>Time when the business hour closes (for eg 7:00 pm is 1500)</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "stores.businessHours.exceptions",            "description": "<p>Exceptions where the usual timing does not follow</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.businessHours.exceptions.dayName",            "description": "<p>The days that has timing other than regular timing</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.businessHours.exceptions.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "stores.businessHours.exceptions.close",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "stores.images",            "description": "<p>Array of urls of images of the store</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "stores.deals",            "description": "<p>Array of ids of the deals</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"stores\": [\n        {\n             \"name\": \"Olivander Wands\",\n             \"details\": \"Best wand in entire muggle world\",\n             \"phone\": \"123456\",\n             \"email\": \"olivander@middleEarth.shire\",\n             \"address\": \"221B, aker street\",\n             \"city\": \"New York\",\n             \"state\": \"NY\",\n             \"zipCode\": \"1234\",\n             \"businessHours\": {\n               \"usual\" : {\n                 \"dayName\": [\"mon\", \"tue\", \"wed\"],\n                 \"open\": \"0900\",\n                 \"close\": \"1700\"\n               },\n               \"exceptions\": [\n                 {\n                   \"dayName\": \"sat\",\n                   \"open\": \"1200\",\n                   \"close\": \"1500\"\n                 }\n               ]\n             }\n       },\n       {\n             \"name\": \"Olivander Wands\",\n             \"details\": \"Best wand in entire muggle world\",\n             \"phone\": 123456,\n             \"email\": \"olivander@middleEarth.shire\",\n             \"address\": \"221B, Baker street\",\n             \"city\": \"New York\",\n             \"state\": \"NY\",\n             \"zipCode\": 1234,\n             \"businessHours\": {\n               \"usual\" : {\n                 \"dayName\": [\"mon\", \"tue\", \"wed\"],\n                 \"open\": \"0900\",\n                 \"close\": \"1700\"\n               },\n               \"exceptions\": [\n                 {\n                   \"dayName\": \"sat\",\n                   \"open\": \"1200\",\n                   \"close\": \"1500\"\n                 }\n               ]\n             }\n       }\n    ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ValidationError",            "description": "<p>The shop is already registered</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Validation Error-Response  ",          "content": "HTTP/1.1 400 Bad Request \n{\n    message: \"name must be unique\",\n    type: \"unique violation\",\n    path: \"name\",\n    value: \"Borgin and Burkes\"\n}",          "type": "json"        },        {          "title": "Authorization Error-Response ",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/stores/routes/stores.routes.js",    "groupTitle": "Store"  },  {    "type": "post",    "url": "/stores",    "title": "Add stores to users account",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "name": "postStore",    "group": "Store",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the Store</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "details",            "description": "<p>Details of the Store</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Phone no of the Store</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Valid email of the Store</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Address of the Store is located</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>City where the Store is located</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>Standard two letter code of the state where the Store is located</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "zipCode",            "description": "<p>Zipcode of the location where the Store is located</p>"          },          {            "group": "Parameter",            "type": "JSON",            "optional": false,            "field": "businessHours",            "description": "<p>Business hours of the Store</p>"          },          {            "group": "Parameter",            "type": "JSON",            "optional": false,            "field": "businessHours.usual",            "description": "<p>The usual business hours</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "businessHours.usual.dayName",            "description": "<p>The array of days that has usual timing</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "businessHours.usual.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "businessHours.usual.close",            "description": "<p>Time when the business hour closes (for eg 7:00 pm is 1500)</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "businessHours.exceptions",            "description": "<p>Exceptions where the usual timing does not follow</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.dayName",            "description": "<p>The days that has timing other than regular timing</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.close",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "images",            "description": "<p>Array of urls of images of the store</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "deals",            "description": "<p>Array of ids of the deals</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n   \"name\": \"Olivander Wands\",\n   \"details\": \"Best wand in entire muggle world\",\n   \"phone\": \"123456\",\n   \"email\": \"olivander@middleEarth.shire\",\n   \"address\": \"221B, Baker street\",\n   \"city\" : \"New York\",\n   \"state\": \"NY\",\n   \"zipCode\": \"1234\",\n   \"businessHours\": {\n     \"usual\" : {\n       \"dayName\": [\"mon\", \"tue\", \"wed\"],\n       \"open\": \"0900\",\n       \"close\": \"1700\"\n     },\n     \"exceptions\": [\n       {\n         \"dayName\": \"sat\",\n         \"open\": \"1200\",\n         \"close\": \"1500\"\n       }\n     ]\n   }\n }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Unique name of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "details",            "description": "<p>Details of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Phone no of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Valid email of the Store</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Address of the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>City where the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>Standard two letter code of the state where the Store is located</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "zipCode",            "description": "<p>Zipcode of the location where the Store is located</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "businessHours",            "description": "<p>Business hours of the Store</p>"          },          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "businessHours.usual",            "description": "<p>The usual business hours</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "businessHours.usual.dayName",            "description": "<p>The array of days that has usual timing</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.usual.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.usual.close",            "description": "<p>Time when the business hour closes (for eg 7:00 pm is 1500)</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "businessHours.exceptions",            "description": "<p>Exceptions where the usual timing does not follow</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.dayName",            "description": "<p>The days that has timing other than regular timing</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.open",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessHours.exceptions.close",            "description": "<p>Time when the business hour starts (for eg 7:00 am is 700)</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "images",            "description": "<p>Array of urls of images of the store</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": true,            "field": "deals",            "description": "<p>Array of ids of the deals</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   \"name\": \"Olivander Wands\",\n   \"details\": \"Best wand in entire muggle world\",\n   \"phone\": 123456,\n   \"email\": \"olivander@middleEarth.shire\",\n   \"address\": \"221B, Baker street\",\n   \"city\" : \"New York\",\n   \"state\": \"NY\",\n   \"zipCode\": 1234,\n   \"businessHours\": {\n     \"usual\" : {\n       \"dayName\": [\"mon\", \"tue\", \"wed\"],\n       \"open\": \"0900\",\n       \"close\": \"1700\"\n     },\n     \"exceptions\": [\n       {\n         \"dayName\": \"sat\",\n         \"open\": \"1200\",\n         \"close\": \"1500\"\n       }\n     ]\n   }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response ",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/stores/routes/stores.routes.js",    "groupTitle": "Store"  },  {    "type": "put",    "url": "/store/:storeId",    "title": "Update a store",    "name": "updateStoreById",    "group": "Store",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Id of the Store</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"id\": 2,\n  \"name\": \"Noman's Goods\",\n  \"details\": \"Quality crafts and goods\",\n  \"store_type\": \"general\",\n  \"phone\": \"23425235\",\n  \"email\": \"info@normans.com\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response ",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/stores/routes/stores.routes.js",    "groupTitle": "Store"  },  {    "type": "post",    "url": "/auth/signin",    "title": "Sign in user",    "name": "Login_User",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>User's username</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n   \"username\": \"jsmith\",\n   \"password\": \"x#sjf%sjd\",\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>user data of registered user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>jwt token of logged in account user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"id\": \"123\",\n    \"firstName\": \"Harry\",\n    \"lastName\": \"Potter\",\n    \"email\": \"doe.patronus@owlmail.hg\",\n    \"username\": \"expectoPatronus\",\n    \"zipCode\": \"12345\",\n    \"coordinates\" {\n      \"lat\": \"0.234234287\",\n      \"long\": \"0.42384274\"\n    }\n    \"avatar\": \"aws.sth.com/thestral.png\",\n    \"stores\": [\"12\"],\n    \"entity\": [\"buyer\"]\n    \"createdAt\": \"2016-02-25T14:25:06.139Z\",\n    \"updatedAt\": \"2016-02-29T19:34:01.061Z\",\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NjMsImZpcnN0TmFtZSI6IlByYXZpbiIsImxhc3ROYW1lIjoiQmFzaHlhbCIsImVtYWlsIjoicHJhaW4uc2h5aWlhbEBnbWFpbC5jb20iLCJ1c2VybmFtZSI6InBpaHlhbCIsInBhc3N3b3JkIjoiJDJhJDEwJEk2anlLTktwNVNwV2YxcHdDT3FnN09SYXlmaDM2V0dQOFNYaG1NRUFpa1NPWktIcnk0YlJhIiwiYXZhdGFyIjoic29tZVBpYyIsInN0b3JlcyI6WyIxMiJdLCJjcmVhdGVkQXQiOiIyMDE2LTAyLTI1VDE0OjI1OjA2LjEzOVoiLCJ1cGRhdGVkQXQiOiIyMDE2LTAyLTI5VDE5OjM0OjAxLjA2MVoiLCJpYXQiOjE0NTY3ODU5NzgsImlzcyI6Inh0aHJmdCIsInN1YiI6NjN9.xzTwy1Ml7f_kEf3Nrf0tQMsyVFutIuEr5x3jdnAF2L0\"\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Credential",            "description": "<p>Error The username/password mismatch</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n \"error\": \"Credentials error\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/users/routes/users.auth.routes.js",    "groupTitle": "User"  },  {    "type": "delete",    "url": "/user/:userId",    "title": "Delete a user",    "name": "deleteUserById",    "group": "User",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the user</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/users/routes/users.routes.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/me",    "title": "Get current user\"s profile data",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "name": "getMe",    "group": "User",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "JSON",            "optional": false,            "field": "user",            "description": "<p>User data of registered user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.id",            "description": "<p>Unique id of regisetered user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.firstName",            "description": "<p>Firstname of the User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.lastName",            "description": "<p>Lastname of the User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>Email of the User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.avatar",            "description": "<p>Avatar of the User</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "user.entity",            "description": "<p>Buyer or seller or Both</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n \"user\": {\n     \"id\": \"123\",\n     \"firstName\": \"Harry\",\n     \"lastName\": \"Potter\",\n     \"email\": \"doe.patronus@owlmail.hg\",\n     \"username\": \"expectoPatronus\",\n     \"avatar\": \"aws.sth.com/thestral.png\",\n     \"stores\": [\"1\", \"2\"],\n     \"entity\": [\"buyer\"]\n }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/users/routes/users.routes.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user/:userId",    "title": "Get a user by Id",    "name": "getUserById",    "group": "User",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Id of the user</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n{\n   \"id\": 2,\n   \"firstName\": \"Remus\",\n   \"lastName\": \"Lupin\",\n   \"email\": \"rlupin@alumni.hogwarts.edu\",\n   \"username\": \"lonewolf\",\n   \"avatar\": \"136\",\n   \"stores\": null,\n   \"coordinates\": null,\n   \"zipCode\": \"34566\",\n   \"createdAt\": \"2016-05-19T13:53:55.147Z\",\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid token HTTP/1.1 401 Unauthorized</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "modules/users/routes/users.routes.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users",    "title": "List users",    "name": "getUsers",    "group": "User",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Users jwt token recieved after login</p>"          }        ]      },      "examples": [        {          "title": "Authorization header example",          "content": "{\n    \"Authorization\": \"JWT\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1uiJ9.eyJpZCI6NjMsImZpcnN0aHJmdCIsInN1YiI6NjN9.-fEdrkQEafK6RJ25FV2o_4pst2oWxTkKivSjOFPphxQ\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "     HTTP/1.1 200 OK\n     {\n     \t\"users\": [\n           {\n             id\": 2,\n             firstName\": \"Remus\",\n             lastName\": \"Lupin\",\n             email\": \"rlupin@alumni.hogwarts.edu\",\n             username\": \"lonewolf\",\n             avatar\": \"136\",\n             stores\": null,\n             coordinates\": null,\n             zipCode\": \"34566\",\n             createdAt\": \"2016-05-19T13:53:55.147Z\",\n             updatedAt\": \"2016-05-19T13:53:55.147Z\"\n           },\n           {\n             id\": 8,\n             firstName\": \"Harry\",\n             lastName\": \"Potter\",\n             email\": \"hpotter@hogwarts.edu\",\n             username\": \"dementorslayer\",\n             avatar\": \"121\",\n             stores\": null,\n             coordinates\": null,\n             zipCode\": \"34566\",\n             createdAt\": \"2016-05-19T13:53:55.147Z\",\n             updatedAt\": \"2016-05-19T13:53:55.147Z\"\n\t          }\n     \t]\n     }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthorizationError",            "description": "<p>The authorization token is expired or invalid</p>"          }        ]      },      "examples": [        {          "title": "Authorization Error-Response ",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/users/routes/users.routes.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/auth/signup",    "title": "Sign up user",    "name": "postUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Firstname of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Lastname of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "zipCode",            "description": "<p>Zipcode of the user address</p>"          },          {            "group": "Parameter",            "type": "JSON",            "optional": false,            "field": "coordinates",            "description": "<p>geolocation coordinates for the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "avatar",            "description": "<p>Url to profile picture of the user</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n   \"firstName\": \"John\",\n   \"lastName\": \"Smith\",\n   \"email\": \"john.smith@fakemail.com\",\n   \"username\": \"jsmith\",\n   \"password\": \"x#sjf%sjd\",\n   \"zipCode\": \"92612\",\n   \"coordinates\": {\n     \"lat\": \"0.234234287\",\n     \"long\": \"0.42384274\"\n   }\n   \"avatar\": \"aws.sth.com/jsmith.png\",\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>User data of registered user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.id",            "description": "<p>Unique id of regisetered user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.firstName",            "description": "<p>User's Firstname</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.lastName",            "description": "<p>User's Lastname</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's Email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.username",            "description": "<p>User's Username</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.zipCode",            "description": "<p>User's Zipcode</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.coordinates",            "description": "<p>User's locaiton coordinates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.avatar",            "description": "<p>Users's Avatar</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.token",            "description": "<p>User's valid token</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n \"user\": {\n     \"id\": \"123\",\n     \"firstName\": \"John \",\n     \"lastName\": \"Smith\",\n     \"email\": \"john.smith@fakemail.com\",\n     \"username\": \"jsmith\",\n     \"avatar\": \"aws.sth.com/jsmith.png\",\n     \"zipCode\": \"92612\",\n     \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NjMsImZpcnN0TmFtZSI6IlByYXZpbiIsImxhc3ROYW1lIjoiQmFzaHlhbCIsImVtYWlsIjoicHJhaW4uc2h5aWlhbEBnbWFpbC5jb20iLCJ1c2VybmFtZSI6InBpaHlhbCIsInBhc3N3b3JkIjoiJDJhJDEwJEk2anlLTktwNVNwV2YxcHdDT3FnN09SYXlmaDM2V0dQOFNYaG1NRUFpa1NPWktIcnk0YlJhIiwiYXZhdGFyIjoic29tZVBpYyIsInN0b3JlcyI6WyIxMiJdLCJjcmVhdGVkQXQiOiIyMDE2LTAyLTI1VDE0OjI1OjA2LjEzOVoiLCJ1cGRhdGVkQXQiOiIyMDE2LTAyLTI5VDE5OjM0OjAxLjA2MVoiLCJpYXQiOjE0NTY3ODU5NzgsImlzcyI6Inh0aHJmdCIsInN1YiI6NjN9.xzTwy1Ml7f_kEf3Nrf0tQMsyVFutIuEr5x3jdnAF2L0\"\n }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ValidationError",            "description": "<p>The username/email is already registered</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"message\": \"username must be unique\",\n \"type\": \"unique violation\",\n \"path\": \"username\",\n \"value\": \"jsmith\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "modules/users/routes/users.auth.routes.js",    "groupTitle": "User"  }] });
